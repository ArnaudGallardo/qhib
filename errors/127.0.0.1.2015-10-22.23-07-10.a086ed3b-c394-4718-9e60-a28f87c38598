(dp1
S'output'
p2
S"<type 'exceptions.TypeError'> object of type 'NoneType' has no len()"
p3
sS'layer'
p4
S'/Users/arnaudgallardo/Documents/UCSC/web2py/applications/tv/controllers/default.py'
p5
sS'code'
p6
S'# -*- coding: utf-8 -*-\n# this file is released under public domain and you can use without limitations\n\nimport urllib2\nimport json\nimport dateutil.parser\nimport hitbox\n\n\ndef get_key(url):\n    authKey = hitbox.get_auth()\n    hitbox.reset_streamKey(authKey)\n    streamKey = hitbox.get_streamKey(authKey)\n    return 0\n\n\ndef index():\n    #get_key("")\n    form=FORM(INPUT(_type=\'submit\', _class=\'loginBtn\', _value=XML(\'&#xf090;\')),\n              INPUT(_name=\'email\', requires=IS_NOT_EMPTY(), _class=\'login\', _placeholder="Email"),\n              INPUT(_name=\'password\', _type=\'password\', requires=IS_NOT_EMPTY(), _class=\'login\', _placeholder="Mot de passe"))\n    form[\'_style\']=\'width:200px\'\n    dico = {"form": form, "connected": False}\n    email, password = request.post_vars[\'email\'], request.post_vars[\'password\']\n    if not auth.login_bare(email, password):\n        db.auth_user.insert(\n            first_name=None,\n            last_name=None,\n            email=email,\n            password=db.auth_user.password.requires[0](password)[0]\n        )\n    auth.login_bare(email, password)\n    return dict(dico=dico)\n\n\ndef user():\n    """\n    exposes:\n    http://..../[app]/default/user/login\n    http://..../[app]/default/user/logout\n    http://..../[app]/default/user/register\n    http://..../[app]/default/user/profile\n    http://..../[app]/default/user/retrieve_password\n    http://..../[app]/default/user/change_password\n    http://..../[app]/default/user/manage_users (requires membership in\n    http://..../[app]/default/user/bulk_register\n    use @auth.requires_login()\n        @auth.requires_membership(\'group name\')\n        @auth.requires_permission(\'read\',\'table name\',record_id)\n    to decorate functions that need access control\n    """\n    return dict(form=auth())\n\n\n\nresponse._vars=response._caller(index)\n'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "/Users/arnaudgallardo/Documents/UCSC/web2py/gluon/restricted.py", line 227, in restricted\n    exec ccode in environment\n  File "/Users/arnaudgallardo/Documents/UCSC/web2py/applications/tv/controllers/default.py", line 56, in <module>\n  File "/Users/arnaudgallardo/Documents/UCSC/web2py/gluon/globals.py", line 412, in <lambda>\n    self._caller = lambda f: f()\n  File "/Users/arnaudgallardo/Documents/UCSC/web2py/applications/tv/controllers/default.py", line 30, in index\n    password=db.auth_user.password.requires[0](password)[0]\n  File "/Users/arnaudgallardo/Documents/UCSC/web2py/gluon/validators.py", line 2851, in __call__\n    if len(value) < self.min_length:\nTypeError: object of type \'NoneType\' has no len()\n'
p11
s.